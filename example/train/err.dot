digraph fullGraph {
	nodesep=1;
	nslimit=3;
	rankdir=TB;
	ranksep="1.5 equally";
	Node_0xc4200f40d0:Node_0xc4200f40d0:anchor->Node_0xc420372dd0:Node_0xc420372dd0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4200f40d0:Node_0xc4200f40d0:anchor->Node_0xc4206bb2b0:Node_0xc4206bb2b0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc4200f4340:Node_0xc4200f4340:anchor->Node_0xc4203725b0:Node_0xc4203725b0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4200f4340:Node_0xc4200f4340:anchor->Node_0xc420373e10:Node_0xc420373e10:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc4200f4410:Node_0xc4200f4410:anchor->Node_0xc4200f40d0:Node_0xc4200f40d0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4200f4410:Node_0xc4200f4410:anchor->Node_0xc4200f4340:Node_0xc4200f4340:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc4200f4680:Node_0xc4200f4680:anchor->Node_0xc4200f4410:Node_0xc4200f4410:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4200f4750:Node_0xc4200f4750:anchor->Node_0xc4203735f0:Node_0xc4203735f0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4200f4750:Node_0xc4200f4750:anchor->Node_0xc4200f4680:Node_0xc4200f4680:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc4200f49c0:Node_0xc4200f49c0:anchor->Node_0xc420791040:Node_0xc420791040:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4200f49c0:Node_0xc4200f49c0:anchor->Node_0xc4200f4750:Node_0xc4200f4750:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc4200f4b60:Node_0xc4200f4b60:anchor->Node_0xc4200f49c0:Node_0xc4200f49c0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4200f4b60:Node_0xc4200f4b60:anchor->Node_0xc420791110:Node_0xc420791110:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc4200f4c30:Node_0xc4200f4c30:anchor->Node_0xc4200f4b60:Node_0xc4200f4b60:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4200f4d00:Node_0xc4200f4d00:anchor->Node_0xc4200f4c30:Node_0xc4200f4c30:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4200f4dd0:Node_0xc4200f4dd0:anchor->Node_0xc4200f4c30:Node_0xc4200f4c30:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4200f4dd0:Node_0xc4200f4dd0:anchor->Node_0xc4200f4d00:Node_0xc4200f4d00:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc4203724e0:Node_0xc4203724e0:anchor->Node_0xc420372340:Node_0xc420372340:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4203724e0:Node_0xc4203724e0:anchor->Node_0xc420790270:Node_0xc420790270:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc4203725b0:Node_0xc4203725b0:anchor->Node_0xc4203724e0:Node_0xc4203724e0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc420372d00:Node_0xc420372d00:anchor->Node_0xc420372b60:Node_0xc420372b60:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc420372d00:Node_0xc420372d00:anchor->Node_0xc420790a90:Node_0xc420790a90:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc420372dd0:Node_0xc420372dd0:anchor->Node_0xc420372d00:Node_0xc420372d00:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc420373040:Node_0xc420373040:anchor->Node_0xc4207905b0:Node_0xc4207905b0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc420373040:Node_0xc420373040:anchor->Node_0xc4206bbd40:Node_0xc4206bbd40:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc4203732b0:Node_0xc4203732b0:anchor->Node_0xc420790680:Node_0xc420790680:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4203732b0:Node_0xc4203732b0:anchor->Node_0xc4206bb5f0:Node_0xc4206bb5f0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc420373380:Node_0xc420373380:anchor->Node_0xc420373040:Node_0xc420373040:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc420373380:Node_0xc420373380:anchor->Node_0xc4203732b0:Node_0xc4203732b0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc420373520:Node_0xc420373520:anchor->Node_0xc420373380:Node_0xc420373380:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc420373520:Node_0xc420373520:anchor->Node_0xc420790750:Node_0xc420790750:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc4203735f0:Node_0xc4203735f0:anchor->Node_0xc420373520:Node_0xc420373520:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc420373d40:Node_0xc420373d40:anchor->Node_0xc420373ba0:Node_0xc420373ba0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc420373d40:Node_0xc420373d40:anchor->Node_0xc420790ea0:Node_0xc420790ea0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc420373e10:Node_0xc420373e10:anchor->Node_0xc420373d40:Node_0xc420373d40:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4206baf70:Node_0xc4206baf70:anchor->Node_0xc420289c70:Node_0xc420289c70:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4206baf70:Node_0xc4206baf70:anchor->Node_0xc420288270:Node_0xc420288270:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc4206bb1e0:Node_0xc4206bb1e0:anchor->Node_0xc420289450:Node_0xc420289450:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4206bb1e0:Node_0xc4206bb1e0:anchor->Node_0xc4206bad00:Node_0xc4206bad00:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc4206bb2b0:Node_0xc4206bb2b0:anchor->Node_0xc4206baf70:Node_0xc4206baf70:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4206bb2b0:Node_0xc4206bb2b0:anchor->Node_0xc4206bb1e0:Node_0xc4206bb1e0:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc4206bb520:Node_0xc4206bb520:anchor->Node_0xc4206bb2b0:Node_0xc4206bb2b0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4206bb5f0:Node_0xc4206bb5f0:anchor->Node_0xc4206ba4e0:Node_0xc4206ba4e0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4206bb5f0:Node_0xc4206bb5f0:anchor->Node_0xc4206bb520:Node_0xc4206bb520:anchor[ labelfloat=false, taillabel=" 1 " ];
	Node_0xc4206bbc70:Node_0xc4206bbc70:anchor->Node_0xc4206bbba0:Node_0xc4206bbba0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4206bbd40:Node_0xc4206bbd40:anchor->Node_0xc4206bbba0:Node_0xc4206bbba0:anchor[ labelfloat=false, taillabel=" 0 " ];
	Node_0xc4206bbd40:Node_0xc4206bbd40:anchor->Node_0xc4206bbc70:Node_0xc4206bbc70:anchor[ labelfloat=false, taillabel=" 1 " ];
	outsideRoot->insideInputs[ constraint=false, style=invis, weight=999 ];
	outsideExprG->insideExprG[ constraint=false, style=invis, weight=999 ];
	outsideRoot->outsideExprG[ constraint=false, style=invis, weight=999 ];
	insideInputs->insideExprG[ constraint=false, style=invis, weight=999 ];
	subgraph cluster_expressionGraph {
	label=expressionGraph;
	Node_0xc4200f40d0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6b7</TD><TD>⊙ false(%6ac, %69b) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>⊙ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4200f4340 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6b8</TD><TD>⊙ false(%6a7, %6b6) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>⊙ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4200f4410 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6b9</TD><TD>+ false(%6b7, %6b8) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>+ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4200f4680 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6ba</TD><TD>tanh(%6b9) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>tanh :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4200f4750 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6bb</TD><TD>⊙ false(%6b1, %6ba) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>⊙ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4200f49c0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6bc</TD><TD>A × b(%c, %6bb) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>A × b :: Matrix a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4200f4b60 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6bd</TD><TD>+ false(%6bc, %d) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>+ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4200f4c30 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6be</TD><TD>exp(%6bd) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>exp :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4200f4d00 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6bf</TD><TD>Σ[0](%6be) :: float32</TD></TR>
<TR><TD>Op</TD><TD>Σ[0] :: Vector a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4200f4dd0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#FF0000;" >

<TR><TD>6c0</TD><TD>÷ false(%6be, %6bf) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>÷ false :: Vector a → a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420288270 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>67d</TD><TD>+ false(%67b, %67c) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>+ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420289450 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>689</TD><TD>sigmoid(%688) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>sigmoid :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420289c70 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>68e</TD><TD>sigmoid(%68d) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>sigmoid :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420372340 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6a5</TD><TD>+ false(%6a3, %6a4) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>+ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4203724e0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6a6</TD><TD>+ false(%6a5, %2) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>+ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4203725b0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6a7</TD><TD>sigmoid(%6a6) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>sigmoid :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420372b60 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6aa</TD><TD>+ false(%6a8, %6a9) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>+ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420372d00 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6ab</TD><TD>+ false(%6aa, %8) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>+ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420372dd0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6ac</TD><TD>sigmoid(%6ab) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>sigmoid :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420373040 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6ad</TD><TD>A × b(%3, %6a2) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>A × b :: Matrix a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4203732b0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6ae</TD><TD>A × b(%4, %69d) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>A × b :: Matrix a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420373380 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6af</TD><TD>+ false(%6ad, %6ae) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>+ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420373520 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6b0</TD><TD>+ false(%6af, %5) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>+ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4203735f0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6b1</TD><TD>sigmoid(%6b0) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>sigmoid :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420373ba0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6b4</TD><TD>+ false(%6b2, %6b3) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>+ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420373d40 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6b5</TD><TD>+ false(%6b4, %b) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>+ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420373e10 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6b6</TD><TD>tanh(%6b5) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>tanh :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4206ba4e0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>693</TD><TD>sigmoid(%692) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>sigmoid :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4206bad00 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>698</TD><TD>tanh(%697) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>tanh :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4206baf70 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>699</TD><TD>⊙ false(%68e, %67d) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>⊙ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4206bb1e0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>69a</TD><TD>⊙ false(%689, %698) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>⊙ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4206bb2b0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>69b</TD><TD>+ false(%699, %69a) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>+ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4206bb520 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>69c</TD><TD>tanh(%69b) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>tanh :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4206bb5f0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>69d</TD><TD>⊙ false(%693, %69c) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>⊙ false :: Vector a → Vector a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4206bbba0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6a0</TD><TD>exp(%69f) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>exp :: a → a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4206bbc70 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6a1</TD><TD>Σ[0](%6a0) :: float32</TD></TR>
<TR><TD>Op</TD><TD>Σ[0] :: Vector a → a</TD></TR>
<TR><TD>Shape</TD><TD>()</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4206bbd40 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor" >

<TR><TD>6a2</TD><TD>÷ false(%6a0, %6a1) :: Vector float32</TD></TR>
<TR><TD>Op</TD><TD>÷ false :: Vector a → a → Vector a</TD></TR>
<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input 0</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>%!s(NIL)</TD></TR>


</TABLE>
>, shape=none ];
	insideExprG [ style=invis ];

}
;
	subgraph inputConsts {
	rank=max;
	subgraph cluster_inputs {
	label=inputs;
	Node_0xc420790270 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>2</TD><TD>Bᵢ :: Vector float32</TD></TR>

<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Vector (78) [1]<BR />[ 0.417   0.122  ⋯  0.335   0.272]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc4207905b0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>3</TD><TD>Wₒ :: Matrix float32</TD></TR>

<TR><TD>Shape</TD><TD>(78, 78)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (78, 78) [78 1]<BR />⎡  -0.0712     0.0553  ⋯    0.0579      0.106⎤<BR />⎢   -0.265     0.0537  ⋯   -0.0314      0.181⎥<BR />  ⋮  <BR />⎢    0.415     0.0849  ⋯     0.142      0.162⎥<BR />⎣     0.22     -0.118  ⋯   -0.0202    -0.0613⎦<BR /></TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420790680 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>4</TD><TD>Uₒ :: Matrix float32</TD></TR>

<TR><TD>Shape</TD><TD>(78, 78)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (78, 78) [78 1]<BR />⎡   -0.118     -0.366  ⋯    -0.372    0.00613⎤<BR />⎢   -0.252    -0.0517  ⋯    0.0122    -0.0673⎥<BR />  ⋮  <BR />⎢    -0.29     -0.211  ⋯    -0.345    -0.0213⎥<BR />⎣  0.00832     -0.227  ⋯     0.155     -0.198⎦<BR /></TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420790750 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>5</TD><TD>Bₒ :: Vector float32</TD></TR>

<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Vector (78) [1]<BR />[   0.396    0.0395  ⋯     0.34     0.205]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420790a90 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>8</TD><TD>Bf :: Vector float32</TD></TR>

<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Vector (78) [1]<BR />[ -0.0802     0.138  ⋯   -0.101   -0.0519]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420790ea0 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>b</TD><TD>bc :: Vector float32</TD></TR>

<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Vector (78) [1]<BR />[   0.0287    -0.0866  ⋯   -0.0264    -0.0107]</TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420791040 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>c</TD><TD>Wy :: Matrix float32</TD></TR>

<TR><TD>Shape</TD><TD>(78, 78)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Matrix (78, 78) [78 1]<BR />⎡   0.0441      0.169  ⋯     0.685     -0.403⎤<BR />⎢    0.321      0.285  ⋯     0.298     -0.131⎥<BR />  ⋮  <BR />⎢     0.34      0.251  ⋯     0.126  -0.000137⎥<BR />⎣     0.26      0.423  ⋯     0.314     -0.118⎦<BR /></TD></TR>


</TABLE>
>, shape=none ];
	Node_0xc420791110 [ fontname=monospace, label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" PORT="anchor"  COLOR="#00FF00;" BGCOLOR="lightyellow">

<TR><TD>d</TD><TD>by :: Vector float32</TD></TR>

<TR><TD>Shape</TD><TD>(78)</TD></TR>
<TR><TD>Overwrites Input -1</TD><TD>Data On: CPU</TD></TR>

<TR><TD>Value</TD><TD>Vector (78) [1]<BR />[  0.0624    -0.135  ⋯   -0.138    -0.116]</TD></TR>


</TABLE>
>, shape=none ];
	insideInputs [ style=invis ];

}
;

}
;
	subgraph outsides {
	outsideExprG [ style=invis ];
	outsideRoot [ style=invis ];

}
;

}
